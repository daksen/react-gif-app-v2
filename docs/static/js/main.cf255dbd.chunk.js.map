{"version":3,"sources":["components/Search.js","components/Header.js","components/App.js","index.js"],"names":["Search","setGifs","useState","inputValue","setInputValue","hintStyle","setHintStyle","getGifs","search","a","url","fetch","request","json","data","gifs","map","img","id","title","images","downsized_medium","onSubmit","e","preventDefault","trim","length","type","placeholder","autoComplete","value","onChange","target","style","display","Header","src","alt","width","App","className","key","ReactDOM","render","document","getElementById"],"mappings":"mNA0DeA,EAvDA,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EACUC,mBAAS,IADnB,mBACnBC,EADmB,KACPC,EADO,OAEQF,mBAAS,QAFjB,mBAEnBG,EAFmB,KAERC,EAFQ,KAIpBC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACNC,EADM,kDAC2CF,EAD3C,gEAEUG,MAAMD,GAFhB,cAENE,EAFM,gBAGSA,EAAQC,OAHjB,gBAGLC,EAHK,EAGLA,KACDC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC3B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAG1CT,EAAQc,GAXI,4CAAH,sDAgCb,OACI,oCACI,0BAAMO,SAXY,SAACC,GACvBA,EAAEC,iBACCrB,EAAWsB,OAAOC,OAAS,IAC1BtB,EAAc,IACdE,EAAa,QACbC,EAAQJ,MAOJ,2BACIwB,KAAK,OACLT,GAAG,cACHU,YAAY,oBACZC,aAAa,MACbC,MAAO3B,EACP4B,SA3BU,SAACR,GACvBnB,EAAcmB,EAAES,OAAOF,OACpBP,EAAES,OAAOF,MAAMJ,OAAS,EACvBpB,EAAa,SAEbA,EAAa,YAyBb,yBAAKY,GAAG,OAAOe,MAAO,CAACC,QAAS7B,IAC5B,4DCrCD8B,EAXA,SAAC,GAAe,IAAdlC,EAAa,EAAbA,QACb,OACI,yBAAKiB,GAAG,UACJ,yBAAKA,GAAG,cACJ,yBAAKkB,IAAI,kCAAkClB,GAAG,aAAamB,IAAI,aAAaC,MAAM,SAEtF,kBAAC,EAAD,CAAQrC,QAASA,MCedsC,EArBH,WAAO,IAAD,EACUrC,mBAAS,IADnB,mBACPa,EADO,KACDd,EADC,KAGd,OACI,yBAAKiB,GAAG,aACJ,yBAAKsB,UAAU,WACX,yBAAKA,UAAU,WACX,kBAAC,EAAD,CAAQvC,QAASA,KAErB,yBAAKuC,UAAU,8BAEPzB,EAAKC,KAAI,SAAAC,GACL,OAAO,yBAAKwB,IAAKxB,EAAIC,GAAImB,IAAKpB,EAAIE,MAAOiB,IAAKnB,EAAIP,aCT9EgC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.cf255dbd.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\n\r\nconst Search = ({setGifs}) => {\r\n    const [inputValue, setInputValue] = useState('');\r\n    const [hintStyle, setHintStyle] = useState('none');\r\n\r\n    const getGifs = async(search) => {\r\n        const url = `https://api.giphy.com/v1/gifs/search?q=\"${search}\"&limit=10&api_key=uxTQOUYCoyHbE54ZliTDHgkdwIv4dzxk`;\r\n        const request = await fetch(url);\r\n        const {data} = await request.json();\r\n        const gifs = data.map((img) => {\r\n            return {\r\n                id: img.id,\r\n                title: img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        });\r\n        setGifs(gifs);\r\n    }\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n        if(e.target.value.length > 0) {\r\n            setHintStyle('block');\r\n        } else {\r\n            setHintStyle('none');\r\n        }\r\n    }\r\n\r\n    const handleInputSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 0) {\r\n            setInputValue('');\r\n            setHintStyle('none');\r\n            getGifs(inputValue);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form onSubmit={handleInputSubmit}>\r\n                <input \r\n                    type=\"text\"\r\n                    id=\"search-text\"\r\n                    placeholder=\"Search for giphys\"\r\n                    autoComplete=\"off\"\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                />\r\n            </form>\r\n            <div id=\"hint\" style={{display: hintStyle}}>\r\n                <p>Simply hit enter to search</p>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport Search from './Search'\r\n\r\n\r\nconst Header = ({setGifs}) => {\r\n    return (\r\n        <div id=\"header\">\r\n            <div id=\"giphy-logo\">\r\n                <img src=\"https://i.imgur.com/7DuUbZf.png\" id=\"giphy-logo\" alt=\"Giphy logo\" width=\"25%\" />\r\n            </div>\r\n            <Search setGifs={setGifs} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from 'react';\nimport Header from './Header';\n\n\nconst App = () => {\n    const [gifs, setGifs] = useState([]);\n\n    return (\n        <div id=\"container\">\n            <div className=\"section\">\n                <div className=\"content\">\n                    <Header setGifs={setGifs} />\n                </div>\n                <div className=\"content scrollable-content\">\n                    {\n                        gifs.map(img => {\n                            return <img key={img.id} alt={img.title} src={img.url} />\n                        })\n                    }\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './css/index.css';\n\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}